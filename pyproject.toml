[build-system]
requires = ["setuptools>=45", "wheel", "setuptools-scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"
 
[project]
name = "kmlorm"
authors = [
    {name = "Jack Nerad", email = "kmlorm.project@gmail.com"}
]
description = "A Django-style ORM for KML (Keyhole Markup Language) files"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["kml", "orm", "gis", "geospatial", "django-style", "google-earth"]
dependencies = [
    "lxml",
]
dynamic = ["version"]

[project.optional-dependencies]

dev = [
    "pytest>=6.0",
    "pytest-cov",
    "black",
    "flake8",
    "mypy",
    "isort",
    "pre-commit",
]
docs = [
    "sphinx",
    "sphinx-rtd-theme",
    "sphinx-autodoc-typehints",
]
all = [
    "kmlorm[dev,docs]"
]

[project.urls]
Homepage = "https://github.com/stbrie/kmlorm"
Documentation = "https://kmlorm.readthedocs.io"
Repository = "https://github.com/stbrie/kmlorm.git"
"Bug Tracker" = "https://github.com/stbrie/kmlorm/issues"

[tool.setuptools.packages.find]
include = ["kmlorm*"]

[tool.setuptools_scm]
write_to = "kmlorm/_version.py"

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
exclude = ["kmlorm/_version.py"]
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
exclude = 'kmlorm/_version.py'

[tool.pytest.ini_options]
testpaths = ["kmlorm/tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=kmlorm",
    "--cov-report=term-missing",

]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["kmlorm"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]